@page
@model Blog.Pages.Account.ProfileModel
@{
    ViewData["Title"] = Model.UserModel.UserName;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    var targetUser = Model.UserModel;
    var canSeePrivateInformation = await Model.Permissions.CanSeePrivateInformationAsync(targetUser);
    var canEdit = await Model.Permissions.CanEditProfileAsync(targetUser);
    var banButton = await Html.PartialAsync("_Anchor", new AnchorModel("Ban", "/Account/BanConfirmation", targetUser.Id, await Model.Permissions.CanBanUserAsync(targetUser)));
}

<h3>
    Profile information @await generateEditButtonAsync(targetUser.Id, canEdit) @banButton
    @if (await Model.Permissions.CanUnbanUserAsync(targetUser))
    {
        <span>| <a asp-controller="@nameof(AccountController).GetController()" asp-action="@nameof(AccountController.UnbanAsync)" asp-route-userId="@targetUser.Id">Unban</a></span>
    }
    @await Html.PartialAsync("_Anchor", AnchorModel.ToController("Report", nameof(ReportingController), nameof(ReportingController.ReportProfileAsync), "id", targetUser.Profile.Id, await Model.Permissions.CanReportAsync(targetUser.Profile)))
</h3>

@await Html.PartialAsync("_ProfileImage", targetUser)

<div>@("Name: " + targetUser.UserName)</div>
<div>@("Gender: " + targetUser.Profile.Gender.GetEnumValueDescription())</div>
@if (canSeePrivateInformation)
{
    <div>@("E-Mail: " + targetUser.Email)</div>
    <div>@("E-Mail confirmed: " + targetUser.EmailConfirmed.Ternar("Yes", "No"))</div>
}
<div>@("Role: " + Model.Role)</div>
<div>@("State: " + targetUser.Status.State.GetEnumValueDescription())</div>
<div>@("Registration date: " + targetUser.Profile.RegistrationDate.ToString("dd.MM.yyyy"))</div>
@if (targetUser.EmailConfirmed)
{
    if (canEdit)
    {
        <div><a asp-page="/Account/ProfileEdit" asp-route-id="@targetUser.Id">Edit profile</a></div>
    }
    if (await Model.Permissions.CanChangePasswordAsync(targetUser))
    {
        <div><a asp-page="/Account/PasswordChange" asp-route-id="@targetUser.Id">Change password</a></div>
    }
}
else
{
    if (Model.IsCurrentUser)
    {
        <div><a asp-page="/Account/ConfirmEMail">Confirm email</a></div>
    }
}

<h4>About @targetUser.UserName @await generateEditButtonAsync(targetUser.Id, canEdit)</h4>
@if (string.IsNullOrEmpty(targetUser.Profile.About))
{
    <div>No information provided</div>
}
else
{
    <div>@targetUser.Profile.About</div>
}

@if (targetUser.Posts.Any())
{
    <h3>Posts</h3>

    @foreach (var post in targetUser.Posts)
    {
        <div><a asp-page="/Post" asp-route-id="@post.Id">@post.Title</a></div>
    }
}

@if (User.IsInOneOfTheRoles(Roles.GetAllNotLess(Roles.MODERATOR)))
{
    <h4>Violations</h4>

    if (targetUser.Violations.Count == 0)
    {
        <span>None we know about ;)</span>
    }

    <ul>
        @foreach (var violation in targetUser.Violations)
        {
            <li>
                <span>Got from <a asp-page="/Account/Profile" asp-route-id="@violation.Reporter.Id">@violation.Reporter.UserName</a></span>
                <div>
                    <span>@violation.Description</span>
                </div>
                <div>
                    <span>Object: </span>
                    @switch (violation.ObjectType)
                    {
                        case ViolationObjectType.UNSPECIFIED:
                            <span>is not specified</span>
                            break;
                        case ViolationObjectType.COMMENTARY:
                            <a asp-controller="@nameof(CommentaryController).GetController()" asp-action="@nameof(CommentaryController.GetCommentaryAsync)" asp-route-id="@violation.ObjectId">commentary</a>
                            break;
                        case ViolationObjectType.POST:
                            <a asp-page="/Post" asp-route-id="@violation.ObjectId">post</a>
                            break;

                        default:
                            <span>unknown</span>
                            break;
                    }
                </div>
            </li>
        }
    </ul>
}

@if (User.IsInOneOfTheRoles(Roles.GetAllNotLess(Roles.MODERATOR)))
{
    <h4>Reports</h4>

    if (targetUser.Reports.Count == 0)
    {
        <span>None we know about ;)</span>
    }

    <ul>
        @foreach (var report in targetUser.Reports.OrderByDescending(r => r.CreationDate))
        {
            <li>
                <span>Reported by <a asp-page="/Account/Profile" asp-route-id="@report.Reporter.Id">@report.Reporter.UserName</a> at @report.CreationDate.ToString("hh:mm dd.MM.yyyy"). Report object: </span>
                @{ await Html.RenderPartialAsync("_ObjectReference", new ObjectReferenceModel(report.ReportObject)); }
            </li>
        }
    </ul>
}

@if (User.IsInOneOfTheRoles(Roles.GetAllNotLess(Roles.MODERATOR)))
{
    <h4>Actions</h4>

    if (targetUser.Actions.Count == 0)
    {
        <span>Nothing at the moment</span>
    }

    <ul>
        @foreach (var action in targetUser.Actions.OrderByDescending(r => r.ActionDate))
        {
        <li>
            <span>@action.ActionType.ToString() at @action.ActionDate.ToString("hh:mm dd.MM.yyyy"). Object: </span>
            @if (action.ReportObject != null)
            {
                await Html.RenderPartialAsync("_ObjectReference", new ObjectReferenceModel(action.ReportObject));
            }
            else
            {
                <span>unknown</span>
            }
        </li>
        }
    </ul>
}

<div>
    Seen @Model.UserModel.Profile.ViewStatistic.TotalViews times
</div>

@functions
{
    public async Task<object> generateEditButtonAsync(string userId, bool showLink)
    {
        return await Html.PartialAsync("_Anchor", new AnchorModel("Edit", "/Account/ProfileEdit", userId, showLink));
    }
}
