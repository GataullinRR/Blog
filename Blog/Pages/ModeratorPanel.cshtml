@page
@model Blog.Pages.ModeratorPanelModel
@{
    ViewData["Title"] = "Moderator panel";
}

<div class="container container-main">
    <div class="row">
        <div class="col">
            <h2>Moderator panel</h2>

            <h3>Owners</h3>

            @foreach (var user in Model.Group.Moderators)
            {
                <a asp-page="/Account/Profile" asp-route-id="@user.Id">@user.UserName</a>
            }

            <h4>Users you are in charge of</h4>

            @if (!Model.TargetUsers.Any())
            {
                <span>None at the moment :(</span>
            }

            @foreach (var user in Model.TargetUsers)
            {
                <a asp-page="/Account/Profile" asp-route-id="@user.Id">@user.UserName</a>
            }

            @{
                var assignedEntities = Model.Entities.Where(e => e.AssignedModerator == Model.Owner);
                var unassignedEntities = Model.Entities.Where(e => e.AssignedModerator == null);
            }

            <h3>Entities you are assigned for</h3>

            @if (!assignedEntities.Any())
            {
                <div>None at the moment :(</div>
                if (unassignedEntities.Any())
                {
                    <div>You can <a href="#UnassignedEntities">assign</a> new ones</div>
                }
            }
            <ul>
                @foreach (var entity in assignedEntities)
                {
                    <li>
                        @{ await Html.RenderPartialAsync("_EntityToCheck", entity); }
                        <span exclude-if="@Model.ReadOnlyAccess"> | <a asp-page-handler="Check" asp-route-id="@entity.Id">mark as resolved</a></span>
                    </li>
                }
            </ul>

            <h3 id="UnassignedEntities">Unassigned entities</h3>

            @if (unassignedEntities.Any())
            {
                <ul style="margin-bottom:10px">
                    @foreach (var entity in unassignedEntities.Take(100))
                    {
                        <li>
                            @{ await Html.RenderPartialAsync("_EntityToCheck", entity); }
                        </li>
                    }
                </ul>

                <form if exclude-if="@Model.ReadOnlyAccess" method="post" asp-page-handler="Assign" style="max-width:300px">
                    <input type="hidden" asp-for="@Model.TargetModeratorId" />

                    <div class="form-group">
                        <label>Number of entities to assign</label>
                        <input class="form-control" asp-for="NumOfEntitiesToAssign" type="number" />
                        <span class="text-danger" asp-validation-for="NumOfEntitiesToAssign"></span>
                    </div>

                    <button type="submit" style="width:100%" class="btn btn-primary">Assign</button>
                </form>
            }
            else
            {
                <div>There are no entities to process. Come back later!</div>
            }
        </div>
    </div>
</div>