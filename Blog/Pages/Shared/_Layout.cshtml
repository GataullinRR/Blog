@{
    var model = (Model as ILayoutModelProvider)?.LayoutModel ?? new LayoutModel();
    var currentUser = await UserManager.GetUserAsync(User);
}
@inject Blog.Services.PermissionsService Permissions
@inject Microsoft.AspNetCore.Identity.UserManager<User> UserManager

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/lib/bootstrap-4.3.1-dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/ js / tinymce / skins / ui / oxide / content.min.css" />
    @*<link rel="stylesheet" href="~/js/tinymce/skins/content/default/content.min.css" />*@
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css" />
    @*<link href="~/css/site.css" rel="stylesheet" />*@

    @RenderSection("Styles", required: false)

    <title>@ViewData["Title"]</title>

    <script>
        var partialLoaders = [];
    </script>
</head>

<body>
    <div>
        <div id="busyModal" class="modal">
            <div class="modal-content">
                <p id="busyModalTextContainer" align="center"></p>
            </div>
        </div>

        <nav class="navbar navbar-expand-md navbar-light bg-white">
            <a class="navbar-brand" asp-page="/Index">Home</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="collapsibleNavbar">
                <ul class="navbar-nav mr-auto">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-page="/Account/Profile">@User.Identity.Name</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Account" asp-action="Logout">Logout</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-page="/Account/Login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-page="/Account/Register">Register</a>
                        </li>
                    }
                    @if (await Permissions.CanCreatePostAsync())
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-page="/PostCreate">New post</a>
                        </li>
                    }
                    @if (await Permissions.CanAccessModeratorsPanelAsync(currentUser))
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-page="/ModeratorPanel">Moderator panel</a>
                        </li>
                    }
                    @if (await Permissions.CanAccessBlogControlPanelAsync())
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-page="/AdminPanel">Admin panel</a>
                        </li>
                    }
                </ul>

                <form class="form-inline my-2">
                    <div class="input-group">
                        <input class="form-control mr-2" type="search" placeholder="Search" aria-label="Search" />
                        <button class="btn btn-light" type="submit">Search</button>
                    </div>
                </form>
            </div>
        </nav>

        <div id="messages">
            @foreach (var message in model.Messages)
            {
                await Html.RenderPartialAsync("_MessageTemplate", message);
            }
        </div>
        @RenderBody()

        <footer>
            <span>Created by <a href="https://github.com/GataullinRR">GataullinRR</a></span>
            <span style="float:right">Powered by ASP .NET Core 2.2</span>
        </footer>

        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <partial name="_JQuery" />
        <script src="~/lib/jquery-ajax-unobtrusive/dist/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js" type="text/javascript"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js" type="text/javascript"></script>
        <script src="~/lib/bootstrap-4.3.1-dist/js/bootstrap.min.js"></script>
        <script src="~/js/tinymce/tinymce.min.js"></script>
        <partial name="_HelperFunctions" />

        <script>
            // See https://www.tiny.cloud/docs/demo/full-featured/
            // and https://www.tiny.cloud/docs/configure/editor-appearance/#menu
            tinymce.init({
                mode: "specific_textareas",
                editor_selector: "rich-edit",
                plugins: 'preview paste searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen table image link codesample charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons',
                imagetools_cors_hosts: ['picsum.photos'],
                toolbar: 'undo redo | bold italic underline strikethrough | outdent indent |  numlist bullist | removeformat | charmap emoticons | fullscreen preview | insertfile image media link anchor codesample',
                toolbar_sticky: true,
                autosave_ask_before_unload: true,
                autosave_interval: "30s",
                autosave_prefix: "{path}{query}-{id}-",
                autosave_restore_when_empty: false,
                autosave_retention: "10m",
                image_advtab: true,
                importcss_append: true,
                height: 400,
                height: 600,
                image_caption: true,
                quickbars_selection_toolbar: 'bold italic underline strikethrough | quicklink blockquote quickimage quicktable',
                noneditable_noneditable_class: "mceNonEditable",
                toolbar_drawer: 'sliding',
                contextmenu: "link image imagetools",
                menu: {
                    file: { title: 'File', items: 'newdocument restoredraft | preview | print ' },
                    edit: { title: 'Edit', items: 'undo redo | cut copy paste | selectall | searchreplace' },
                    view: { title: 'View', items: 'code | visualaid visualchars visualblocks | spellchecker | preview fullscreen' },
                    insert: { title: 'Insert', items: 'image link media codesample inserttable | charmap emoticons hr | anchor toc | insertdatetime' },
                    format: { title: 'Format', items: 'bold italic underline strikethrough superscript subscript | removeformat' },
                    tools: { title: 'Tools', items: 'code wordcount' },
                    table: { title: 'Table', items: 'inserttable tableprops deletetable row column cell' },
                    help: { title: 'Help', items: '' }
                }
            });

            $(document).ready(function () {
                function applyClasses() {
                    $('a').click(function (e) {
                        if ($(this).hasClass("no-redirect")) {
                            e.preventDefault();
                        }
                        else {

                        }
                    });
                }

                var observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (mutation) {
                        if (mutation.addedNodes && mutation.addedNodes.length > 0) {
                            applyClasses();
                        }
                    });
                });

                var config = {
                    attributes: true,
                    childList: true,
                    characterData: true,
                    subtree: true, // Important
                };

                observer.observe(document.body, config);
                applyClasses();

                for (var i = 0; i < partialLoaders.length; i++) {
                    partialLoaders[i]();
                }
            });

            function showBusy(operationName) {
                var modal = document.getElementById("busyModal");
                var modalTextContainer = document.getElementById("busyModalTextContainer");
                modalTextContainer.innerHTML = operationName;
                modal.style.display = "block";

                return function () {
                    modal.style.display = "none";
                }
            }

            function renderMessage(messageText, jsActions) {
                var route = "/Messages/GetMessageView?body=" + messageText;
                if (jsActions != undefined) {
                    route += "&jsActions=" + jsActions;
                }
                makeRequest(route, "get", function (response) {
                    var container = document.createElement("div");
                    container.innerHTML = response;
                    document.getElementById("messages").appendChild(container);
                });
            }

            function removeParent(element) {
                var message = element.parentElement.closest(".message");
                message.parentElement.removeChild(message);

                return true;
            }

            function report(element, route, id) {
                makePost(route, { "id": id }, true,
                    function () {
                        renderMessage("Report has been submitted");
                        var reportButton = element.parentElement.closest(".btn-report");
                        reportButton.parentElement.removeChild(reportButton);
                    },
                    reportError
                );

                function reportError() {
                    renderMessage("An error occurred during submitting the report :(");
                }
            }
        </script>

        @RenderSection("Scripts", required: false)
    </div>
</body>
</html>
