// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatisticDBModels;

namespace StatisticDBModels.Migrations
{
    [DbContext(typeof(StatisticContext))]
    partial class StatisticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StatisticDBModels.BlogDayStatistic", b =>
                {
                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommentariesCount")
                        .HasColumnType("int");

                    b.Property<int>("PostsCount")
                        .HasColumnType("int");

                    b.Property<int>("UsersCount")
                        .HasColumnType("int");

                    b.HasKey("Day");

                    b.ToTable("BlogDaysStatistic");
                });

            modelBuilder.Entity("StatisticDBModels.UserWithStateCount", b =>
                {
                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BlogDayStatisticDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Day", "Count");

                    b.HasIndex("BlogDayStatisticDay");

                    b.ToTable("UserWithStateCount");
                });

            modelBuilder.Entity("StatisticDBModels.ViewStatistic<int, StatisticDBModels.Markers+AClass>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllViews")
                        .HasColumnType("int");

                    b.Property<int>("RegisteredUserViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PostsViewStatistic");
                });

            modelBuilder.Entity("StatisticDBModels.ViewStatistic<int, StatisticDBModels.Markers+BClass>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllViews")
                        .HasColumnType("int");

                    b.Property<int>("RegisteredUserViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CommentariesViewStatistic");
                });

            modelBuilder.Entity("StatisticDBModels.ViewStatistic<int, StatisticDBModels.Markers+CClass>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllViews")
                        .HasColumnType("int");

                    b.Property<int>("RegisteredUserViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProfilesViewStatistic");
                });

            modelBuilder.Entity("StatisticDBModels.UserWithStateCount", b =>
                {
                    b.HasOne("StatisticDBModels.BlogDayStatistic", null)
                        .WithMany("UsersWithStateCount")
                        .HasForeignKey("BlogDayStatisticDay");
                });
#pragma warning restore 612, 618
        }
    }
}
